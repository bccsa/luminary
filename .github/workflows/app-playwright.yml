name: Playwright Tests

on:
  pull_request:
    branches: [main, master]
    paths:
      - app/**
      - shared/**
      - api/**
      - .github/workflows/playwright.yml
  push:
    branches: [main, master]

permissions:
  contents: read

env:
  CI: true
jobs:
  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        # To support multiline secrets, we need to use echo and escape the secrets
        run: |
          touch .env
          echo PORT=${{ vars.DOCKER_PORT }} >> .env
          echo "JWT_SECRET='$( echo '${{ secrets.JWT_SECRET }}' )'" >> .env
          echo "DB_CONNECTION_STRING='$( echo '${{ secrets.DB_CONNECTION_STRING }}' )'" >> .env
          echo "DB_DATABASE='$( echo '${{ secrets.DB_DATABASE }}' )'" >> .env
          echo "S3_ENDPOINT='$( echo '${{ secrets.S3_ENDPOINT }}' )'" >> .env
          echo "S3_PORT='$( echo '${{ secrets.S3_PORT }}' )'" >> .env
          echo "S3_USE_SSL='$( echo '${{ secrets.S3_USE_SSL }}' )'" >> .env
          echo "S3_ACCESS_KEY='$( echo '${{ secrets.S3_ACCESS_KEY }}' )'" >> .env
          echo "S3_SECRET_KEY='$( echo '${{ secrets.S3_SECRET_KEY }}' )'" >> .env
          echo "S3_IMG_BUCKET='$( echo '${{ secrets.S3_IMG_BUCKET }}' )'" >> .env
          echo "CORS_ORIGIN='$( echo '${{ vars.CORS_ORIGIN }}' )'" >> .env
          echo "JWT_MAPPINGS='$( echo '${{ vars.JWT_MAPPINGS }}' )'" >> .env
        working-directory: api

      - name: Create enviroment file in app
        run: cp .env.example .env
        working-directory: app

      - name: Start CouchDB
        run: |
          ./scripts/start-couchdb-in-ci.sh
          curl -X PUT http://admin:password@127.0.0.1:5984/luminary-local
        working-directory: api

      - name: Start MinIO
        run: |
          ./scripts/start-minio-in-ci.sh
        working-directory: api

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: app/.node-version
          cache: "npm"
          cache-dependency-path: |
            shared/package-lock.json
            app/package-lock.json

      - name: Install dependencies in API
        run: npm ci
        working-directory: api

      - name: Seed the API with Default Data
        run: npm run seed
        working-directory: api

      - name: Run the API
        run: npm run start & sleep 5
        working-directory: api

      - name: Install and build shared
        run: npm ci && npm run build
        working-directory: shared

      - name: Install app dependencies
        run: npm ci --install-links
        working-directory: app

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: app

      - name: Run Playwright E2E tests
        working-directory: app
        run: npx playwright test --reporter=list
