name: App Playwright Tests

on:
  pull_request:
    branches: [main, master]
    paths:
      - app/**
      - shared/**
      - api/**
      - cms/**
      - .github/workflows/playwright.yml
  push:
    branches: [main, master]

permissions:
  contents: read

env:
  CI: true

jobs:
  api:
    runs-on: ubuntu-latest
    environment: api-e2e
    services:
      couchdb:
        image: couchdb:latest
        env:
          COUCHDB_USER: admin
          COUCHDB_PASSWORD: password
        ports:
          - 5984:5984
        options: >-
          --health-cmd="curl -f http://localhost:5984/_up"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create database in couchDB
        run: curl -X PUT http://admin:password@localhost:5984/luminary-local

      - name: Setup API Environment Variables
        working-directory: api
        run: |
          touch .env
          echo PORT="${{ vars.PORT }}" >> .env
          echo CORS_ORIGIN="${{ secrets.CORS_ORIGIN }}" >> .env
          echo JWT_SECRET="${{ secrets.JWT_SECRET }}" >> .env
          echo DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" >> .env
          echo DB_DATABASE="luminary-local" >> .env
          echo DB_MAX_SOCKETS="${{ vars.DB_MAX_SOCKETS }}" >> .env
          echo SYNC_TOLERANCE="${{ vars.SYNC_TOLERANCE }}" >> .env
          echo JWT_MAPPING="${{ vars.JWT_MAPPING }}" >> .env
          echo S3_ENDPOINT="${{ secrets.S3_ENDPOINT }}" >> .env
          echo S3_PORT="${{ secrets.S3_PORT }}" >> .env
          echo S3_USE_SSL="${{ vars.S3_USE_SSL }}" >> .env
          echo S3_ACCESS_KEY="${{ secrets.S3_ACCESS_KEY }}" >> .env
          echo S3_SECRET_KEY="${{ secrets.S3_SECRET_KEY }}" >> .env
          echo S3_IMG_BUCKET="${{ secrets.S3_IMG_BUCKET }}" >> .env
          echo S3_IMG_QUALITY="${{ vars.S3_IMG_QUALITY }}" >> .env
          echo SOCKETIO_MAX_HTTP_BUFFER_SIZE="${{ vars.SOCKETIO_MAX_HTTP_BUFFER_SIZE }}" >> .env

      - name: Setup API
        working-directory: api
        run: |
          npm install 
          npm run seed

      - name: Start API
        run: |
          npm run start &
          sleep 20
        working-directory: api

  app:
    runs-on: ubuntu-latest
    environment: app-e2e
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup APP Environment Variables
        working-directory: app
        run: |
          touch .env
          echo VITE_LOGO_FAVICON="${{ vars.VITE_LOGO_FAVICON }}" >> .env
          echo VITE_APP_NAME="${{ vars.VITE_APP_NAME }}" >> .env
          echo VITE_API_URL="${{ vars.VITE_API_URL }}" >> .env
          echo VITE_AUTH0_CLIENT_ID="${{ secrets.VITE_AUTH0_CLIENT_ID }}" >> .env
          echo VITE_AUTH0_AUDIENCE="${{ vars.VITE_AUTH0_AUDIENCE }}" >> .env
          echo VITE_AUTH0_DOMAIN="${{ vars.VITE_AUTH0_DOMAIN }}" >> .env
          echo VITE_HIDE_EXPLORE="${{ vars.VITE_HIDE_EXPLORE }}" >> .env

      - name: Setup app and shared library
        run: |
          cd shared
          npm install
          npm run build
          cd ../app
          npm ci --install-links

      - name: Install browser dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 \
            libgtk-4-1 \
            libasound2 \
            libdrm2 \
            libgbm1 \
            libnss3 \
            libxss1 \
            libxtst6 \
            libx11-xcb1 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libxshmfence1 \
            libpci3 \
            libwoff1 \
            libwoff2-1 \
            libvpx9 \
            libopus0 \
            libevent-2.1-7 \
            libsecret-1-0 \
            libavif16 \
            libgraphene-1.0-0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libflite1 \
            libflite1-plugins \
            libgstallocators-1.0-0 \
            libgstapp-1.0-0 \
            libgstpbutils-1.0-0 \
            libgstaudio-1.0-0 \
            libgsttag-1.0-0 \
            libgstvideo-1.0-0 \
            libgstgl-1.0-0 \
            libgstcodecparsers-1.0-0 \
            libgstfft-1.0-0 \
            libharfbuzz-icu0 \
            libgles2 \
            libx264-dev

      - name: Install Playwright browsers
        working-directory: app
        run: npx playwright install

      - name: Run Playwright Tests
        working-directory: app
        run: npm run test:e2e
